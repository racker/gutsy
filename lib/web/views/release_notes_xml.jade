-var base_url = "https://" + req.headers.host + req.path;
-base_url += "?start=" + start
-base_url += "&end=" + end;
|<feed xmlns="http://www.w3.org/2005/Atom">
|    <title type="text" xml:lang="en">Gutsy Release Notes</title>
|    <author><name>Gutsy</name></author>
|    <link type="application/atom+xml" href="https://#{ req.headers.host }#{ req.path }" rel="self"/>
|    <link href="https://#{ req.headers.host }" rel="alternate"/>
|    <updated>#{ last_crawl_time.toISOString() }</updated>
|    <id>https://#{ req.headers.host }#{ req.path }</id>
for note in notes
  -var v1_url = v1.id_to_url(version_one.get_config(), note.v1.id);
  |<entry>
  |    <title>#{ note.title }</title>
  |    <link href="#{ note.github_pr_href || v1_url }"/>
  |    <updated>#{ note.get_changed_date().toISOString() }</updated>
  |    <id>#{ note.github_pr_href || v1_url }</id>
  |    <summary type="html">
  |    <![CDATA[
  |    !{ markdown(note.get_body()) }
  ul
    if note.merged_at !== undefined
      li
        |merged
        i=format_time(note.merged_at)
        |  <nbsp />on<nbsp />
        a(href=note.github_pr_href) github
    if note.v1.id !== undefined
      li
        |created
        i=format_time(note.v1.create_date)
        |  <nbsp />on<nbsp />
        a(href=v1_url) V1
  |    ]]>
  |    </summary>
  |</entry>
|</feed>
